G = (N, E, P, S)
N = set of non-terminals
E = set of terminals
P = set of productions
S = starting symbol

N = {
	CODE, PROGRAM, MAIN_FUNCTION, FUNCTION, PARAMETERS, DEFAULT PARAMETERS, \
	BODY, ASSIGNMENT, ARRAY_DECL, ARRAY_IMPL, ELEMS, EXPRESSION, FUNCTION_CALL, \
	TERM, FACTOR, CONDITIONAL, ELIF, ELIFS, COMPARISON, IO_STMT, LOOP, \
	WHILE_CONDITION, ANY_VALUE, VARIABLE_DECL, \
	INTEGER_DECL, CHAR_DECL, STRING_DECL, RELATION, \
	BOOLEAN, LOGICAL, SIGN, PARAMETERS_TAIL
	}
E = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, epsilon}
P = {
	CODE -> 2+PROGRAM+3
	PROGRAM -> MAIN_FUNCTION | PROGRAM+FUNCTION | FUNCTION+PROGRAM
	MAIN_FUNCTION -> 30+39+20+PARAMETERS+21+22+16+BODY+17
	FUNCTION -> 30+0+20+PARAMETERS+21+22+16+BODY+17
	PARAMETERS -> 0 | 0+PARAMETERS_TAIL | epsilon
	PARAMETERS_TAIL -> 23+PARAMETERS | DEFAULT_PARAMETERS
	DEFAULT_PARAMETERS -> 4+EXPRESSION | 4+EXPRESSION+23+DEFAULT_PARAMETERS

	BODY -> VARIABLE_DECL | ASSIGNMENT | CONDITIONAL | LOOP | IO_STMT | 40+EXPRESSION | BODY+BODY
	ASSIGNMENT -> 0+4+EXPRESSION

	VARIABLE_DECL -> INTEGER_DECL | CHAR_DECL | STRING_DECL | ARRAY_DECL
	INTEGER_DECL -> 35+0 | 35+0+4+EXPRESSION 
	CHAR_DECL -> 36+0 | 36+0+4+ANY_VALUE
	STRING_DECL -> 37+0 | 37+0+4+ANY_VALUE

	ARRAY_DECL -> 38+0 | 38+0+4+ARRAY_IMPL
	ARRAY_IMPL -> 18+ELEMS+19
	ELEMS -> ANY_VALUE | ELEMS+23+ELEMS | epsilon

	EXPRESSION -> TERM | EXPRESSION+OPERATION+TERM | FUNCTION_CALL
	FUNCTION_CALL -> 0+20+PARAMETERS+21
	TERM -> FACTOR | TERM+OPERATION+FACTOR
	FACTOR -> 20+EXPRESSION+21 | ANY_VALUE

	CONDITIONAL -> 24+COMPARISON+22+16+BODY+17+ELIFS+25+22+16+BODY+17
	ELIFS -> ELIF | ELIF+ELIFS | epsilon
	ELIF -> 25+24+COMPARISON+22+16+BODY+17
	COMPARISON -> EXPRESSION+RELATION+EXPRESSION | COMPARISON+LOGICAL+COMPARISON
	LOGICAL -> 31 | 32
	RELATION -> 5 | 6 | 7 | 8 | 9 | 10
	OPERATION -> 11 | 12 | 13 | SIGN
	SIGN -> 14 | 15

	IO_STMT -> 26+20+0+23+ANY_VALUE+21 | 27+20+ANY_VALUE+23+ANY_VALUE+21

	LOOP -> 34+WHILE_CONDITION+33+22+16+BODY+17 | 33+22+16+BODY+17+34+WHILE_CONDITION
	WHILE_CONDITION -> COMPARISON | BOOLEAN

	ANY_VALUE -> 0 | 1
	BOOLEAN -> 28 | 29
	}
S = CODE
