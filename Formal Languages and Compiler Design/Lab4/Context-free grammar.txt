G = (N, E, P, S)
N = set of non-terminals
E = set of terminals
P = set of productions
S = starting symbol

# Make this grammar LL(1)-compatible
# Remove left recursivities.. manually :(
# Allow only one default parameter
# Multiple statements in a comparison are not allowed <=> eg: a < 3 and b > 2; only 1 of them 
# Expression can not be assigned a function call anymore <=> a = suma(3, 5)

N = {
	CODE, PROGRAM, MAIN_FUNCTION, FUNCTION, PARAMETERS, DEFAULT PARAMETERS, \
	BODY, ASSIGNMENT, ARRAY_DECL, ARRAY_IMPL, ELEMS, EXPRESSION, FUNCTION_CALL, \
	TERM, FACTOR, CONDITIONAL, ELIF, ELIFS, COMPARISON, IO_STMT, LOOP, \
	WHILE_CONDITION, ANY_VALUE, VARIABLE_DECL, EXPRESSION2 \
	INTEGER_DECL, CHAR_DECL, STRING_DECL, RELATION, TERM2, \
	BOOLEAN, LOGICAL, SIGN, PARAMETERS_TAIL, BODY2, FUNCTIONS, MAIN
	}
E = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, epsilon}
P = {
	CODE -> 2+PROGRAM+3
	PROGRAM -> MAIN
	FUNCTIONS -> 30+FUNCTION+FUNCTIONS | epsilon
	MAIN -> 30+MAIN_FUNCTION
	MAIN_FUNCTION -> 39+20+PARAMETERS+21+22+16+BODY+17
	FUNCTION -> 0+20+PARAMETERS+21+22+16+BODY+17
	PARAMETERS -> 0+PARAMETERS_TAIL | epsilon
	PARAMETERS_TAIL -> 23+PARAMETERS | DEFAULT_PARAMETERS | epsilon
	DEFAULT_PARAMETERS -> 4+ANY_VALUE

	BODY -> VARIABLE_DECL+BODY2 | ASSIGNMENT+BODY2 | CONDITIONAL+BODY2 | LOOP+BODY2 | IO_STMT+BODY2 | 40+ANY_VALUE+BODY2
	BODY2 -> BODY | epsilon
	ASSIGNMENT -> 0+4+EXPRESSION

	VARIABLE_DECL -> INTEGER_DECL

	############ INTEGER_DECL -> 35+0+INTEGER_HELPER
	INTEGER_HELPER -> 4+ANY_VALUE | epsilon
	
	CHAR_DECL -> 36+0 | 36+0+4+ANY_VALUE
	STRING_DECL -> 37+0 | 37+0+4+ANY_VALUE

	ARRAY_DECL -> 38+0+ARRAY_HELPER
	ARRAY_HELPER -> 4+ARRAY_IMPL | epsilon
	ARRAY_IMPL -> 18+ELEMS+19
	
	ELEMS -> ANY_VALUE+ELEMS2 | ELEMS2
	############ ELEMS2 -> 23+ELEMS | epsilon

	EXPRESSION -> BplusA; 
	A -> 14plusBplusA | epsilon;
	C -> 12plusDplusC | epsilon;
	B -> DplusC;
	D -> 20plusEXPRESSIONplus21 | ANY_VALUE;

	CONDITIONAL -> 24+COMPARISON+22+16+BODY+17+ELIFS

	############ ELIFS -> 25+24+COMPARISON+22+16+BODY+17 | epsilon

	ELIF -> 25+24+COMPARISON+22+16+BODY+17
	COMPARISON -> EXPRESSION+RELATION+EXPRESSION 
	LOGICAL -> 31 | 32
	RELATION -> 5 | 6 | 7 | 8 | 9 | 10
	OPERATION -> 11 | 12 | 13 | SIGN
	SIGN -> 14 | 15

	IO_STMT -> 26+20+0+23+ANY_VALUE+21 | 27+20+ANY_VALUE+23+ANY_VALUE+21

	LOOP -> 34+WHILE_CONDITION+33+22+16+BODY+17 | 33+22+16+BODY+17+34+WHILE_CONDITION
	WHILE_CONDITION -> COMPARISON | BOOLEAN

	ANY_VALUE -> 0 | 1
	BOOLEAN -> 28 | 29
	}
S = CODE
