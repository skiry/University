package sample;

import Model.Expressions.*;
import Model.Statements.*;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.control.ListView;
import javafx.scene.control.TableView;

import java.awt.*;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.ListView;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.layout.StackPane;
import javafx.stage.Modality;
import javafx.stage.Stage;

import static Model.DataStructures.BooleanSign.LT;

public class Controller {

        @FXML
        private Button chooseProgramButton;

        @FXML
        private ListView<?> prgStatesView;

        @FXML
        private ListView<String> outView;

        @FXML
        private TableView<?> fileTableView;

        @FXML
        private TableView<?> heapView;

        @FXML
        private TextField prgStatesCountButton;

        @FXML
        private TableView<?> symTableView;

        @FXML
        private Button oneStepButton;

        @FXML
        private ListView<?> exeStackView;

        @FXML
        private Button programOk;

        @FXML
        private ListView<String> programsList;

        private Stage mainStage;

        public void chooseProgramClicked(){
                IStatement ex1 = new CompoundStatement(new AssignmentStatement("v", new ConstantExpression(2)),
                        new PrintStatement(new VariableExpression("v")));

                IStatement ex2 = new CompoundStatement(new AssignmentStatement("a", new ArithmeticExpression('+', new ConstantExpression(2), new ArithmeticExpression('*', new ConstantExpression(3), new ConstantExpression(5)))), new CompoundStatement(new AssignmentStatement("b", new ArithmeticExpression('+', new VariableExpression("a"), new ConstantExpression(1))), new PrintStatement(new VariableExpression("b"))));

                IStatement ex3 = new CompoundStatement(new AssignmentStatement("a", new ArithmeticExpression('-', new ConstantExpression(2), new ConstantExpression(2))), new CompoundStatement(new IfStatement(new VariableExpression("a"), new AssignmentStatement("v", new ConstantExpression(2)), new AssignmentStatement("v", new ConstantExpression(3))), new PrintStatement(new VariableExpression("v"))));

                IStatement ex4 = new CompoundStatement(new openRFileStatement("var_f", "test.in"),
                        new CompoundStatement(new readRFileStatement(new VariableExpression("var_f"), "var_c"),
                                new CompoundStatement(new PrintStatement(new VariableExpression("var_c")),
                                        new CompoundStatement(new IfStatement(new VariableExpression("var_c"), new CompoundStatement(new readRFileStatement(new VariableExpression("var_f"), "var_c"), new PrintStatement(new VariableExpression("var_c"))), new PrintStatement(new ConstantExpression(0))),
                                                new closeRFileStatement(new VariableExpression("var_f"))))));

                IStatement ex5 = new CompoundStatement(new openRFileStatement("var_f", "test.in"),
                        new CompoundStatement(new readRFileStatement(new VariableExpression("var_f+2"), "var_c"),
                                new CompoundStatement(new PrintStatement(new VariableExpression("var_c")),
                                        new CompoundStatement(new IfStatement(new VariableExpression("var_c"), new CompoundStatement(new readRFileStatement(new VariableExpression("var_f"), "var_c"), new PrintStatement(new VariableExpression("var_c"))), new PrintStatement(new ConstantExpression(0))),
                                                new closeRFileStatement(new VariableExpression("var_f"))))));

                IStatement ex6 = new CompoundStatement(new AssignmentStatement("v",new ConstantExpression(10)),
                        new CompoundStatement(new NewStatement("v",new ConstantExpression(20)),
                                new CompoundStatement(new NewStatement("a",new ConstantExpression(22)),
                                        new PrintStatement(new VariableExpression("v")))));

                IStatement ex7 = new CompoundStatement(new AssignmentStatement("v",new ConstantExpression(10)),
                        new CompoundStatement(new NewStatement("v",new ConstantExpression(20)),
                                new CompoundStatement(new NewStatement("a",new ConstantExpression(22)),
                                        new CompoundStatement(new PrintStatement(new ArithmeticExpression('+',new ConstantExpression(100),new ReadHeapExpression("v"))),
                                                new PrintStatement(new ArithmeticExpression('+',new ConstantExpression(100),new ReadHeapExpression("a")))))));

                IStatement ex8 = new CompoundStatement(new AssignmentStatement("v",new ConstantExpression(10)),
                        new CompoundStatement(new NewStatement("v",new ConstantExpression(20)),
                                new CompoundStatement(new NewStatement("a",new ConstantExpression(22)),
                                        new CompoundStatement(new WriteHeapStatement("a",new ConstantExpression(30)),
                                                new CompoundStatement(new PrintStatement(new VariableExpression("a")),
                                                        new PrintStatement(new ReadHeapExpression("a")))))));

                IStatement ex9 = new CompoundStatement(new AssignmentStatement("v",new ConstantExpression(10)),
                        new CompoundStatement(new NewStatement("v",new ConstantExpression(20)),
                                new CompoundStatement(new NewStatement("a",new ConstantExpression(22)),
                                        new CompoundStatement(new WriteHeapStatement("a",new ConstantExpression(30)),
                                                new CompoundStatement(new PrintStatement(new VariableExpression("a")),
                                                        new CompoundStatement(new PrintStatement(new ReadHeapExpression("a")),
                                                                new AssignmentStatement("a",new ConstantExpression(0))))))));

                IStatement ex10 = new PrintStatement(new ArithmeticExpression('+', new ConstantExpression(10), new BooleanExpression(LT,new ConstantExpression(2),
                        new ConstantExpression(6))));

                IStatement ex11 = new CompoundStatement(new AssignmentStatement("v", new ConstantExpression(6)),
                        new CompoundStatement(new WhileStatement(new ArithmeticExpression('-',new VariableExpression("v"), new ConstantExpression(4)),
                                new CompoundStatement(new PrintStatement(new VariableExpression("v")),
                                        new AssignmentStatement("v",new ArithmeticExpression('-',new VariableExpression("v"),new ConstantExpression(1))))),
                                new PrintStatement(new VariableExpression("v"))));

                IStatement ex12 = new CompoundStatement(new AssignmentStatement("v", new ConstantExpression(10)),

                        new CompoundStatement(new NewStatement("a", new ConstantExpression(22)),

                                new CompoundStatement(

                                        new ForkStatement(new CompoundStatement(new WriteHeapStatement("a", new ConstantExpression(30)),

                                                new CompoundStatement(new AssignmentStatement("v", new ConstantExpression(32)),

                                                        new CompoundStatement(new PrintStatement(new VariableExpression("v")),

                                                                new PrintStatement(new ReadHeapExpression("a")))))),

                                        new CompoundStatement(new PrintStatement(new VariableExpression("v")), new PrintStatement(new ReadHeapExpression("a"))))));

                IStatement ex13 = new CompoundStatement(new CompoundStatement(new AssignmentStatement("v", new ConstantExpression(10)), new NewStatement("a", new ConstantExpression(22))),
                        new CompoundStatement(new ForkStatement(new CompoundStatement(new WriteHeapStatement("a",new ConstantExpression(30)),
                                new CompoundStatement(new AssignmentStatement("v", new ConstantExpression(32)), new CompoundStatement(
                                        new PrintStatement(new VariableExpression("v")), new PrintStatement(new ReadHeapExpression("a"))
                                )))), new CompoundStatement(new PrintStatement(new VariableExpression("v")), new PrintStatement(new ReadHeapExpression("a")))));


                ObservableList<String> items = FXCollections.observableArrayList (
                        ex1.toString(),
                        ex2.toString(),
                        ex3.toString(),
                        ex4.toString(),
                        ex5.toString(),
                        ex6.toString(),
                        ex7.toString(),
                        ex8.toString(),
                        ex9.toString(),
                        ex10.toString(),
                        ex11.toString(),
                        ex12.toString(),
                        ex13.toString());
                try {
                        FXMLLoader loader = new FXMLLoader(getClass().getResource("chooseProgram.fxml"));
                        Parent root = loader.load();

                        programsList.setItems(items);
                        Scene secondScene = new Scene(root, 600, 400);

                        // New window (Stage)
                        Stage newWindow = new Stage();
                        newWindow.setTitle("Select a Program!");
                        newWindow.setScene(secondScene);

                        // Specifies the modality for new window.
                        newWindow.initModality(Modality.WINDOW_MODAL);

                        // Specifies the owner Window (parent) for new window
                        newWindow.initOwner(mainStage);

                        // Set position of second window, related to primary window.
                        newWindow.setX(mainStage.getX() + 300);
                        newWindow.setY(mainStage.getY() + 200);

                        programsList.getSelectionModel().selectedItemProperty().addListener(
                                new ChangeListener<String>() {
                                        public void changed(ObservableValue<? extends String> ov,
                                                            String old_val, String new_val) {
                                                prgStatesCountButton.setText(Integer.toString(programsList.getSelectionModel().getSelectedIndex()));
                                        }
                                });

                        newWindow.show();

                }
                catch(Exception e){
                        e.printStackTrace();
                }
        }

        void setMainStage(Stage primaryStage) {
                mainStage = primaryStage;
        }

}
