     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  ;c-(d+a)+(b+c) - a,b,c,d-word
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 0500                        a dw 5
    15 00000002 0A00                        b dw 10
    16 00000004 2300                        c dw 35
    17 00000006 1400                        d dw 20
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22 00000000 B800000000                      mov EAX,0
    23 00000005 BB00000000                      mov EBX,0
    24 0000000A 66A1[04000000]                  mov AX,[c] ; AX=c
    25 00000010 668B1D[06000000]                mov BX,[d] ; BX=d
    26 00000017 66031D[00000000]                add BX,[a] ; BX=d+a
    27 0000001E 6629D8                          sub AX,BX ; AX=c-(d+a)
    28 00000021 668B1D[02000000]                mov BX,[b] ; BX=b
    29 00000028 66031D[04000000]                add BX,[c] ; BX=b+c
    30 0000002F 6601D8                          add AX,BX ; AX=c-(d+a)+(b+c)
    31                                          ; exit(0)
    32 00000032 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    33 00000034 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
